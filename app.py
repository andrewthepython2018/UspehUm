# app.py ‚Äî –û–Ω–ª–∞–π–Ω —à–∫–æ–ª–∞: –≤—Ö–æ–¥ + —Ç–µ—Å—Ç—ã (junior/senior)
import json
from datetime import datetime, timezone

import streamlit as st
from sheets_backend import Sheets
from tests_core import load_subjects_from_sheet, render_test_form

st.set_page_config(page_title="–û–Ω–ª–∞–π–Ω —à–∫–æ–ª–∞ ‚Äî –õ–ö", page_icon="üéì", layout="wide")

# ---- –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ ----
SUBJECTS = [
    ("biology", "–ë–∏–æ–ª–æ–≥–∏—è"),
    ("physics", "–§–∏–∑–∏–∫–∞"),
    ("chemistry", "–•–∏–º–∏—è"),
    ("math", "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞"),
    ("cs", "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞"),
]

# ---- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ Google Sheets ----
def _build_sheets():
    # –Ω–∏—á–µ–≥–æ –ª–∏—à–Ω–µ–≥–æ –Ω–µ –ø–µ—á–∞—Ç–∞–µ–º (–±–µ–∑ –∫–ª—é—á–µ–π –∏ —Ç.–ø.)
    spreadsheet_url = st.secrets.get("spreadsheet_url", "")
    sa_info = st.secrets.get("gcp_service_account", {})
    if not spreadsheet_url or not sa_info:
        st.error("–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã —Å–µ–∫—Ä–µ—Ç—ã: spreadsheet_url –∏/–∏–ª–∏ gcp_service_account.")
        st.stop()
    try:
        return Sheets(spreadsheet_url=spreadsheet_url, sa_info=sa_info)
    except Exception as e:
        st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Google Sheets. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞.")
        st.stop()

if "SHEETS" not in st.session_state:
    st.session_state.SHEETS = _build_sheets()
SHEETS: Sheets = st.session_state.SHEETS

# ---- –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è ----
def login_view():
    # –®–∞–ø–∫–∞/–æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ
    st.title("–û–Ω–ª–∞–π–Ω —à–∫–æ–ª–∞ ‚Äî –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")
    st.markdown(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ü—Ä–æ–π–¥–∏—Ç–µ –≤—Ö–æ–¥–Ω—ã–µ —Ç–µ—Å—Ç—ã –ø–æ –±–∏–æ–ª–æ–≥–∏–∏, —Ñ–∏–∑–∏–∫–µ, —Ö–∏–º–∏–∏, –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ. "
        "–ï—Å–ª–∏ –≤—ã –µ—â—ë –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã ‚Äî –ø–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—É –Ω–∞ –¥–æ—Å—Ç—É–ø."
    )
    st.divider()

    # –í —Å–∞–º–æ–º –≤–µ—Ä—Ö—É login_view (–ø–æ—Å–ª–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤) –¥–æ–±–∞–≤—å—Ç–µ –ø–æ–∫–∞–∑ —Å—Ç–∞—Ç—É—Å–æ–≤:
    if st.session_state.get("signup_success"):
        st.success("–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –ø–æ e-mail –ø–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏.")
        st.session_state["signup_success"] = False
    
    if st.session_state.get("signup_error"):
        st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
        st.session_state["signup_error"] = False

    with st.form("login_form", clear_on_submit=False):
        email = st.text_input("Email", placeholder="name@example.com")
        name = st.text_input("–ò–º—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)")
        submitted = st.form_submit_button("–í–æ–π—Ç–∏")

    if not submitted:
        return

    email_norm = (email or "").strip().lower()
    if "@" not in email_norm:
        st.error("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email.")
        return

    # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        user = SHEETS.get_user(email_norm)
    except Exception:
        user = None

    # –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ ¬´–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏¬ª
    def _is_active(u: dict | None) -> bool:
        if not u:
            return False
        val = str(u.get("active", "")).strip().lower()
        return val in ("true", "1", "yes", "y", "–¥–∞")

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –∏ –∞–∫—Ç–∏–≤–µ–Ω ‚Äî –ø—É—Å–∫–∞–µ–º
    if user and _is_active(user):
        st.session_state["auth"] = {
            "email": email_norm,
            "name": user.get("name") or name or email_norm.split("@")[0],
        }
        st.success("–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω.")
        st.rerun()
        return

    # –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –ò–õ–ò –Ω–∞–π–¥–µ–Ω, –Ω–æ –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º ¬´–≤—Å–ø–ª—ã–≤–∞—é—â—É—é¬ª –∑–∞—è–≤–∫—É
    if not user:
        st.warning("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º e-mail –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—É –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–∏–∂–µ.")
    else:
        st.info("–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –ø–æ–∫–∞ –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã —É—Å–∫–æ—Ä–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å.")

    # –ù–∏–∂–µ, –≤ –≤–µ—Ç–∫–µ "–Ω–µ –Ω–∞–π–¥–µ–Ω" / "–Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω", –æ—Å—Ç–∞–≤—å—Ç–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
    # –∏ –∑–∞–º–µ–Ω–∏—Ç–µ —Å–∞–º expander+form –Ω–∞ —ç—Ç–æ:
    
    # —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ ¬´—ç–∫—Å–ø–∞–Ω–¥–µ—Ä –æ—Ç–∫—Ä—ã—Ç¬ª –º–µ–∂–¥—É –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∞–º–∏
    exp_open = st.session_state.get("signup_open", True)
    
    with st.expander("üìù –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é", expanded=exp_open):
        with st.form("signup_form", clear_on_submit=False):
            # –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–ª—é—á–∏, –ø—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∏ ¬´–ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ—Å—Ç—å¬ª —Å —Ñ–æ—Ä–º–æ–π –≤—Ö–æ–¥–∞ –Ω–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—Ç
            s_name = st.text_input(
                "–ò–º—è", value=(name or (user.get("name", "") if user else "")), key="signup_name"
            )
            s_email = st.text_input(
                "Email –¥–ª—è –¥–æ—Å—Ç—É–ø–∞", value=email_norm, disabled=True, key="signup_email"
            )
            s_group = st.selectbox("–ì—Ä—É–ø–ø–∞", ["–ú–ª–∞–¥—à–∞—è", "–°—Ç–∞—Ä—à–∞—è"], index=0, key="signup_group")
            s_comment = st.text_area("–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)", placeholder="–ö–ª–∞—Å—Å, —à–∫–æ–ª–∞, –ø–æ–∂–µ–ª–∞–Ω–∏—è‚Ä¶", key="signup_comment")
            send_req = st.form_submit_button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É")
    
        if send_req:
            try:
                req_payload = {
                    "group": "junior" if s_group == "–ú–ª–∞–¥—à–∞—è" else "senior",
                    "comment": s_comment or "",
                }
                SHEETS.append_row(
                    "signup",
                    [
                        datetime.now(timezone.utc).isoformat(),
                        s_name,
                        s_email,
                        json.dumps(req_payload, ensure_ascii=False),
                    ],
                )
            except Exception:
                st.session_state["signup_error"] = True
            else:
                st.session_state["signup_success"] = True
    
            # –¥–µ—Ä–∂–∏–º –±–ª–æ–∫ —Ä–∞—Å–∫—Ä—ã—Ç—ã–º –ø–æ—Å–ª–µ –∫–ª–∏–∫–∞ –∏ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
            st.session_state["signup_open"] = True
            st.rerun()



# ---- –î–∞—à–±–æ—Ä–¥ –∏ —Ç–µ—Å—Ç—ã ----
def dashboard_view():
    a = st.session_state.get("auth") or {}
    st.title("–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")
    st.caption("–ü—Ä–æ—Ö–æ–¥–∏—Ç–µ –≤—Ö–æ–¥–Ω—ã–µ —Ç–µ—Å—Ç—ã: —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –∂—É—Ä–Ω–∞–ª —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏.")
    left, right = st.columns([1, 1])
    with left:
        st.caption(f"–í—ã –≤–æ—à–ª–∏ –∫–∞–∫: **{a.get('name') or a.get('email')}**")
    with right:
        if st.button("–í—ã–π—Ç–∏", use_container_width=True):
            st.session_state.pop("auth", None)
            st.rerun()

    # –ú–µ—Ç—Ä–∏–∫–∞ ¬´–°–¥–∞–Ω–æ —Ç–µ—Å—Ç–æ–≤¬ª
    try:
        total_results = SHEETS.count_results(a.get("email")) or 0
    except Exception:
        total_results = 0
    st.metric("–°–¥–∞–Ω–æ —Ç–µ—Å—Ç–æ–≤", total_results)

    st.subheader("–í—Ö–æ–¥–Ω—ã–µ —Ç–µ—Å—Ç—ã")
    grp_label = st.radio("–ì—Ä—É–ø–ø–∞", ["–ú–ª–∞–¥—à–∞—è", "–°—Ç–∞—Ä—à–∞—è"], horizontal=True)
    group_code = "junior" if grp_label == "–ú–ª–∞–¥—à–∞—è" else "senior"

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∞–Ω–∫ –≤–æ–ø—Ä–æ—Å–æ–≤ —Å —É—á—ë—Ç–æ–º –≥—Ä—É–ø–ø—ã (–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ä—É—Å/–∞–Ω–≥–ª subject/group –∏ –ª—é–±–æ–π —Ä–µ–≥–∏—Å—Ç—Ä –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤)
    data = load_subjects_from_sheet(SHEETS, group_code)

    tabs = st.tabs([label for _, label in SUBJECTS])
    for i, (code, label) in enumerate(SUBJECTS):
        with tabs[i]:
            questions = data.get(code, [])
            if not questions:
                st.warning("–í–æ–ø—Ä–æ—Å—ã –ø–æ–∫–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –¥–ª—è —ç—Ç–æ–π –≥—Ä—É–ø–ø—ã.")
                continue

            st.caption("–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ ¬´–û—Ç–ø—Ä–∞–≤–∏—Ç—å¬ª.")
            score, total, answers = render_test_form(code, questions)

            # –ø–∏—à–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ñ–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã
            if score is not None and total:
                try:
                    SHEETS.append_row(
                        "results",
                        [
                            datetime.now(timezone.utc).isoformat(),
                            a["email"],
                            code,
                            score,
                            total,
                            json.dumps(answers, ensure_ascii=False),
                        ],
                    )
                except Exception:
                    st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
                else:
                    st.success(f"–†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {score} / {total}")

# ---- –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ----
def main():
    if not st.session_state.get("auth"):
        login_view()
    else:
        dashboard_view()

if __name__ == "__main__":
    main()
